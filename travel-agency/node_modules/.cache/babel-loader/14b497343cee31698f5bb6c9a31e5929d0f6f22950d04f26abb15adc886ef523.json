{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imad\\\\Desktop\\\\Web_Programiranje_webtravel_273\\\\travel-agency\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { BASE_URL } from '../utils/config';\nimport '../styles/Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    userName: '',\n    email: '',\n    password: ''\n  });\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setCredentials(prev => ({\n      ...prev,\n      [e.target.id]: e.target.value\n    }));\n  };\n  const handleClick = async e => {\n    e.preventDefault();\n    console.log(\"Sending credentials:\", credentials); // Ovdje dodaj logiranje prije slanja podataka\n\n    try {\n      const res = await fetch(`${BASE_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      const result = await res.json();\n      if (!res.ok) {\n        alert(result.message || 'Greška prilikom registracije.');\n        return;\n      }\n\n      // Pretpostavljamo da 'result.data' sadrži korisničke podatke\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: result.data\n      }); // Ažuriraj korisnika sa servera\n      navigate('/login');\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registracija\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userName\",\n        placeholder: \"Korisni\\u010Dko ime\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Lozinka\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registruj se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-footer\",\n      children: [\"Ve\\u0107 imate ra\\u010Dun? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Prijavite se ovdje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"js+tr/jdWN7NHudBvg6T9Z9M1k4=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Link","AuthContext","BASE_URL","jsxDEV","_jsxDEV","Register","_s","credentials","setCredentials","userName","email","password","dispatch","navigate","handleChange","e","prev","target","id","value","handleClick","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","type","payload","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","to","_c","$RefreshReg$"],"sources":["C:/Users/Imad/Desktop/Web_Programiranje_webtravel_273/travel-agency/src/pages/Register.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { BASE_URL } from '../utils/config';\r\nimport '../styles/Auth.css';\r\n\r\n\r\nconst Register = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    userName: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { dispatch } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = e => {\r\n    setCredentials(prev => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Sending credentials:\", credentials);  // Ovdje dodaj logiranje prije slanja podataka\r\n\r\n    try {\r\n        const res = await fetch(`${BASE_URL}/auth/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(credentials),\r\n        });\r\n\r\n        const result = await res.json();\r\n        if (!res.ok) {\r\n            alert(result.message || 'Greška prilikom registracije.');\r\n            return;\r\n        }\r\n\r\n        // Pretpostavljamo da 'result.data' sadrži korisničke podatke\r\n        dispatch({ type: 'REGISTER_SUCCESS', payload: result.data }); // Ažuriraj korisnika sa servera\r\n        navigate('/login');\r\n    } catch (err) {\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>Registracija</h2>\r\n      <form className=\"auth-form\" onSubmit={handleClick}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userName\"\r\n          placeholder=\"Korisničko ime\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Email\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"Lozinka\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Registruj se</button>\r\n      </form>\r\n      <div className=\"auth-footer\">\r\n        Već imate račun? <Link to=\"/login\">Prijavite se ovdje</Link>.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}